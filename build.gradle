/*
   Copyright 2019 Sam Pritchard

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
plugins {
    id 'java'
    id 'maven' // fuck jitpack.
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'idea'
    id 'com.github.johnrengelman.shadow' version '2.0.4'
    id 'com.github.ben-manes.versions' version '0.20.0'
}

group 'com.github.samophis'
description 'A lightweight, fast, library-independent client implementation for Lavalink v3.'
version '4.0.0'

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.8.1'
}

// Credit to Vampire
task downloadDependencies() {
    description 'Download all dependencies to the Gradle cache'
    doLast {
        configurations.findAll { it.canBeResolved }.files
    }
}

shadowJar {
    classifier = 'withDependencies'
}

// Credit to the JDA Developers

bintray {
    user = bintrayUsername
    key = bintrayApiKey
    publications = ['BintrayRelease']
    pkg {
        repo = 'maven'
        name = 'LavaClient'
        licenses = ['Apache-2.0']
        vcsUrl = ['https://github.com/SamOphis/LavaClient.git']
        publish = true
        version {
            name = project.version
            released = new Date()
        }
    }
}

publishing {
    publications {
        BintrayRelease(MavenPublication) {
            from components.java
            groupId group
            artifactId 'LavaClient'
            version version
            artifact sourcesJar
        }
    }
}

build {
    dependsOn clean
    dependsOn jar
    dependsOn sourcesJar
    dependsOn shadowJar
    dependsOn test

    jar.mustRunAfter clean
    sourcesJar.mustRunAfter jar
    shadowJar.mustRunAfter sourcesJar
}

// Credit to the JDA Development Team

String getProjectProperty(String propertyName)
{
    String property = ""
    if (hasProperty(propertyName))
    {
        property = this.properties[propertyName]
    }
    return property
}

bintrayUpload {
    dependsOn build

    onlyIf { !getProjectProperty("bintrayUsername").empty }
    onlyIf { !getProjectProperty("bintrayApiKey").empty }
}

artifacts {
    archives sourcesJar
}

repositories {
    jcenter()
}

ext {
    vertxVersion = '3.6.3'
    findbugsSourcesVersion = '3.0.2'
    lavaplayerSourcesVersion = '1.3.10'
    slf4jVersion = '1.7.25'
    troveVersion = '3.0.3'
    lombokVersion = '1.18.4'
    vertxCompletableFuturesVersion = '0.1.2'
}

dependencies {
    compile group: 'io.vertx', name: 'vertx-core', version: vertxVersion
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'net.sf.trove4j', name: 'trove4j', version: troveVersion
    compile group: 'me.escoffier.vertx', name: 'vertx-completable-future', version: vertxCompletableFuturesVersion
    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compileOnly group: 'com.google.code.findbugs', name: 'jsr305', version: findbugsSourcesVersion
    compileOnly group: 'com.sedmelluq', name: 'lavaplayer', version: lavaplayerSourcesVersion
}

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11


